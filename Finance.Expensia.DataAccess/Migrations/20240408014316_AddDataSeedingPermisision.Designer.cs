// <auto-generated />
using System;
using Finance.Expensia.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Finance.Expensia.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240408014316_AddDataSeedingPermisision")]
    partial class AddDataSeedingPermisision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.BankAlias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AliasName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("BankAliases");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.ChartOfAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ChartOfAccounts");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.CostCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CostCenterCode")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CostCenterName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Partner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermissionDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce03fb46-2d4d-41d9-aa2a-7da429670bab"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "RefreshToken",
                            PermissionDescription = "Ijin untuk melakukan refresh token",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("6659f17a-c52e-4ec3-847b-46866a3b2abf"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "MyPermission",
                            PermissionDescription = "Ijin untuk mendapatkan permission",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("ee541861-a2ff-444e-91bd-29d8c161259c"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "OutgoingPayment.View",
                            PermissionDescription = "Akses untuk view data outgoing payment",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("fb802f18-ae08-43ab-9335-50fc2a1fb290"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "OutgoingPayment.Upsert",
                            PermissionDescription = "Akses untuk melakukan insert dan update data outgoing payment",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("f9200a65-df2c-41da-bc81-e73987370c42"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "OutgoingPayment.Delete",
                            PermissionDescription = "Akses untuk melakukan delete data outgoing payment",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("15987858-8d59-49bc-b7ad-dec1e9dd3c83"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "ApprovalInbox.View",
                            PermissionDescription = "Akses untuk view data approval inbox",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("106ebebf-7ed9-489c-ad28-eeeb49cf71a2"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "ApprovalInbox.Update",
                            PermissionDescription = "Akses untuk melakukan update data approval inbox",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("feceb717-e88d-41bf-86e9-4f3a3cad5cc8"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(2372),
                            CreatedBy = "",
                            PermissionCode = "ApprovalInbox.Delete",
                            PermissionDescription = "Akses untuk melakukan delete data approval inbox",
                            RowStatus = 0
                        });
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 22, DateTimeKind.Utc).AddTicks(7600),
                            CreatedBy = "",
                            RoleCode = "Requestor",
                            RoleDescription = "User Requestor",
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("87312c58-9961-4578-bd05-8e0f96aaeb7f"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 22, DateTimeKind.Utc).AddTicks(7600),
                            CreatedBy = "",
                            RoleCode = "Approval",
                            RoleDescription = "User Approval",
                            RowStatus = 0
                        });
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cf91c77-4a12-4547-bac2-695d0f14741a"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("ce03fb46-2d4d-41d9-aa2a-7da429670bab"),
                            RoleId = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("cfdceb82-2708-4dcc-a4e4-90aa76db8ea7"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("6659f17a-c52e-4ec3-847b-46866a3b2abf"),
                            RoleId = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("0af7a0a4-18a6-47a3-be87-d7cc4271e562"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("ce03fb46-2d4d-41d9-aa2a-7da429670bab"),
                            RoleId = new Guid("87312c58-9961-4578-bd05-8e0f96aaeb7f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("a2ffc228-87b1-4e14-a665-818e32c2996e"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("6659f17a-c52e-4ec3-847b-46866a3b2abf"),
                            RoleId = new Guid("87312c58-9961-4578-bd05-8e0f96aaeb7f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("aa8194b4-0d26-44ea-8815-b0c85d417484"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("ee541861-a2ff-444e-91bd-29d8c161259c"),
                            RoleId = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("ff5cc455-3d81-4e75-98f5-a4f410b64b0d"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("fb802f18-ae08-43ab-9335-50fc2a1fb290"),
                            RoleId = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("a47218fe-31af-4b4b-87db-ea1068b088df"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("f9200a65-df2c-41da-bc81-e73987370c42"),
                            RoleId = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("c419a69a-c778-4e75-913d-a369657fe572"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("15987858-8d59-49bc-b7ad-dec1e9dd3c83"),
                            RoleId = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("65ba5cdf-3cd2-485b-ad7c-79ce544212aa"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("15987858-8d59-49bc-b7ad-dec1e9dd3c83"),
                            RoleId = new Guid("87312c58-9961-4578-bd05-8e0f96aaeb7f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("b6e98a31-52ce-487a-9780-f0429ee627b1"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("106ebebf-7ed9-489c-ad28-eeeb49cf71a2"),
                            RoleId = new Guid("87312c58-9961-4578-bd05-8e0f96aaeb7f"),
                            RowStatus = 0
                        },
                        new
                        {
                            Id = new Guid("8e799e9b-6170-4571-8250-3cd3db045f30"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 23, DateTimeKind.Utc).AddTicks(3910),
                            CreatedBy = "",
                            PermissionId = new Guid("feceb717-e88d-41bf-86e9-4f3a3cad5cc8"),
                            RoleId = new Guid("87312c58-9961-4578-bd05-8e0f96aaeb7f"),
                            RowStatus = 0
                        });
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoProfileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResetToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ResetTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11d61a5b-3236-4a35-8527-cd664d7ee230"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 22, DateTimeKind.Utc).AddTicks(2195),
                            CreatedBy = "",
                            Description = "",
                            Email = "wa.pradana01@gmail.com",
                            FullName = "Wisnu Adhi Pradana",
                            PhotoProfileUrl = "https://cdns.klimg.com/mav-prod-resized/480x/ori/feedImage/2023/7/27/1690436761467-vyccu.jpeg",
                            RowStatus = 0,
                            Username = "wa.pradana01@gmail.com"
                        });
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05b4bc20-a31f-4d5e-b739-6b6e46994976"),
                            Created = new DateTime(2024, 2, 25, 15, 15, 29, 22, DateTimeKind.Utc).AddTicks(9233),
                            CreatedBy = "",
                            RoleId = new Guid("ea2fbce1-631a-4ea3-8076-f32933588f9f"),
                            RowStatus = 0,
                            UserId = new Guid("11d61a5b-3236-4a35-8527-cd664d7ee230")
                        });
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.BankAlias", b =>
                {
                    b.HasOne("Finance.Expensia.DataAccess.Models.Company", "Company")
                        .WithMany("BankAliases")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.ChartOfAccount", b =>
                {
                    b.HasOne("Finance.Expensia.DataAccess.Models.Company", "Company")
                        .WithMany("ChartOfAccounts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.CostCenter", b =>
                {
                    b.HasOne("Finance.Expensia.DataAccess.Models.Company", "Company")
                        .WithMany("CostCenters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Partner", b =>
                {
                    b.HasOne("Finance.Expensia.DataAccess.Models.Company", "Company")
                        .WithMany("Partners")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.RolePermission", b =>
                {
                    b.HasOne("Finance.Expensia.DataAccess.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Finance.Expensia.DataAccess.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.UserRole", b =>
                {
                    b.HasOne("Finance.Expensia.DataAccess.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Finance.Expensia.DataAccess.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Company", b =>
                {
                    b.Navigation("BankAliases");

                    b.Navigation("ChartOfAccounts");

                    b.Navigation("CostCenters");

                    b.Navigation("Partners");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Finance.Expensia.DataAccess.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
