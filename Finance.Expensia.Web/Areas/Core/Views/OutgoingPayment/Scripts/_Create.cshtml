@{
    var ddlCompanyUrl = Url.Action("RetrieveCompanyDatas", "Company");
    var ddlBankAliasUrl = Url.Action("RetrieveBankAlias", "BankAlias");
}

<script type="text/javascript">
    const sampleData = [
        ["2024-04-12", "Company A", "Payment for services rendered", "12345", "CC-001", 1000, "", "0"],
        ["2024-04-11", "Company B", "Purchase of equipment", "54321", "CC-002", 1500, "", "1"],
        ["2024-04-10", "Company C", "Travel expenses", "98765", "CC-003", 800, "", "2"]
    ];

    const gridOutgoingPaymentDetail = $('#gridOutgoingPaymentDetail');
    const dtRequestDate = $("#dtRequestDate"), dtScheduledDate = $("#dtScheduledDate");
    const ddlCompany = $("#ddlCompany"), ddlFromAliasBank = $("#ddlFromAliasBank"), ddlToAliasBank = $("#ddlToAliasBank");
    const txtRequestor = $("#txtRequestor");
    let btnAddDetail;

    $(function () {
        CreateManager = new CreateManager();
        CreateManager.InitManagement();
    });

    function CreateManager() {
        return {
            InitManagement: function () {
                this.InitControls();
                this.InitHandlers();
                this.InitValidation();
                this.InitLoad();
            },
            InitControls: function () {
                gridOutgoingPaymentDetail.DataTable({
                    ordering: false,
                    paging: false,
                    searching: false,
                    info: false,
                    autoWidth: false,
                    data: sampleData,
                    columns: [
                        { title: "Date" },
                        { title: "Partner" },
                        { title: "Description" },
                        { title: "CoA" },
                        { title: "CostCenter" },
                        { title: "Amount" },
                        { title: "File" },
                        { title: "Action" }
                    ],
                    columnDefs: [{
                        targets: -1,
                        orderable: false,
                        className: 'dt-body-center',
                        render: function (data, type, full, meta) {
                            return '<button class="edit-btn btn btn-primary mr-2"><i class="fas fa-edit"></i></button>' +
                                '<button class="delete-btn btn btn-danger mr-2"><i class="fas fa-trash"></i></button>';
                        }
                    }],
                    layout: {
                        top1End: function () {
                            let toolbar = document.createElement('div');
                            let buttons = `<button id="btnAddDetail" class="btn btn-sm btn-outline-primary mr-2 ml-2">Add Detail</button>`
                            toolbar.innerHTML = buttons;

                            return toolbar;
                        }
                    }
                });

                dtRequestDate.datepicker({
                    dateFormat: "yy-mm-dd",
                    disabled: true
                });
                dtRequestDate.datepicker("setDate", new Date())

                dtScheduledDate.datepicker({
                    dateFormat: "yy-mm-dd",
                    minDate: new Date()
                });
            },
            InitHandlers: function () {
                ddlCompany.on("change", function (e) {
                    ddlFromAliasBank.removeAttr("disabled");
                    RefreshDdlBankAlias(ddlFromAliasBank);
                });

                ddlFromAliasBank.add(ddlToAliasBank).on("change", function (e) {
                    const ddl = $(this);
                    const descriptorControl = $(ddl.attr("descriptor-control"));
                    const optionSelected = ddl.find(':selected');
                    const bankName = optionSelected.attr("data-bank-name");
                    const accountNo = optionSelected.attr("data-account-no");
                    const accountName = optionSelected.attr("data-account-name");

                    descriptorControl.val(
`Bank Name : ` + bankName + `
Account Name : ` + accountName + `
Account No : ` + accountNo);
                });

                btnAddDetail = $("#btnAddDetail").on("click", function (e) {
                    
                });
            },
            InitValidation: function () {
            },
            InitLoad: function () {
                RefreshDdlCompany();

                txtRequestor.val(localStorage.getItem("displayName"));

                RefreshDdlBankAlias(ddlToAliasBank);
            }
        }
    };

    function RefreshDdlCompany() {
		$.ajax(Object.assign({}, glbBaseRequest, {
			"url": "@ddlCompanyUrl"
		})).done(function (response) {
			if (response.succeeded) {
				ddlCompany.empty().append(`<option value=""></option>`);

				for (let i = 0; i < response.obj.length; i++) {
                    const data = response.obj[i];
					ddlCompany.append(`<option value="` + data.companyId + `">` + data.companyName + `</option>`);
				}
			}
			else {
				Swal.fire({
					title: "Error",
					text: response.message,
					icon: "error"
				});
			}
		});
    }

    function RefreshDdlBankAlias(ddlBankAlias) {
        let url = "@ddlBankAliasUrl"

        if (ddlBankAlias == ddlFromAliasBank) {
            url = url + "?companyId=" + ddlCompany.val();
        }

        $.ajax(Object.assign({}, glbBaseRequest, {
            "url": url
        })).done(function (response) {
            if (response.succeeded) {
                ddlBankAlias.empty().append(`<option value=""></option>`);

                for (let i = 0; i < response.obj.length; i++) {
                    const data = response.obj[i];
                    ddlBankAlias.append(
                        `<option 
                            value="` + data.bankAliasId + `"
                            data-bank-name="` + data.bankName + `"
                            data-account-no="` + data.accountNo + `"
                            data-account-name="` + data.accountName + `"
                            >` + 
                            data.aliasName + 
                        `</option>`);
                }
            }
            else {
                Swal.fire({
                    title: "Error",
                    text: response.message,
                    icon: "error"
                });
            }
        });
    }
</script>